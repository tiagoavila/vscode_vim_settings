// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+i ctrl+m",
        "command": "workbench.action.tasks.runTask",
        "args": "iex -S mix"
    },
    {
        "key": "ctrl+i ctrl+p",
        "command": "workbench.action.tasks.runTask",
        "args": "iex -S mix phx.server"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+shift+numpad_subtract",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "ctrl+t ctrl+c",
        "command": "workbench.panel.aichat"
    },
    {
        "key": "ctrl+m ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w ctrl+o",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+m u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+w ctrl+s",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+m ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+m ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+w ctrl+a",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+m w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+m ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+m ctrl+l",
        "command": "workbench.action.splitEditorToRightGroup"
    },
    {
        "key": "ctrl+g ctrl+t",
        "command": "github.copilot.completions.toggle"
    },
    {
        "key": "ctrl+t ctrl+c",
        "command": "workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+e ctrl+t",
        "command": "workbench.action.terminal.openNativeConsole"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder"
    }
]